---
import ArrowCard from '@components/ArrowCard.astro'
import Container from '@components/Container.astro'
import { BLOG } from '@consts'
import Layout from '@layouts/Layout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

export const prerender = true

const data = (await getCollection('blog'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

type Acc = {
	[year: string]: CollectionEntry<'blog'>[]
}

const posts = data.reduce((acc: Acc, post) => {
	const year = post.data.date.getFullYear().toString()
	if (!acc[year]) {
		acc[year] = []
	}
	acc[year].push(post)
	return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
	<Container>
		<aside>
			<div class="space-y-4">
				{
					years.map((year) => (
						<section class="space-y-4">
							<div class="font-semibold text-black dark:text-white">{year}</div>
							<div>
								<ul class="not-prose">
									{posts[year].map((post) => (
										<li class="border-b border-black/15 last-of-type:border-none dark:border-white/20">
											<ArrowCard entry={post} />
										</li>
									))}
								</ul>
							</div>
						</section>
					))
				}
			</div>
		</aside>
	</Container>
</Layout>
